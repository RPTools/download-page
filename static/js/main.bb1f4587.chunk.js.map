{"version":3,"sources":["DownloadType.js","Download.js","Releases.js","GitHubReleases.js","index.js"],"names":["DownloadType","ALL","MAC","WINDOWS","LINUX","JAR","ButtonImageMapping","deb","jar","exe","dmg","PlatformMapping","Download","_ref","download","show","index","downloadType","name","endsWith","downloadLink","browser_download_url","ext","substr","lastIndexOf","imagePath","downloadPlatform","react_default","a","createElement","className","href","id","src","htmlFor","download_count","Releases","release","showPre","tool","assets","length","prerelease","releaseDate","Date","published_at","toLocaleString","undefined","day","month","year","hour","minute","timeZoneName","tagName","tag_name","toolImage","releaseNoteLink","replace","map","src_Download","key","GitHubReleases","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setTool","match","console","log","handleDownloadTypeChange","event","setState","target","value","handlePreChange","checked","releaseList","route","params","releases","state","tokenToolReleases","mapToolReleases","onChange","type","src_Releases","tokenToolToolReleases","loading","error","_this2","axios","all","get","then","spread","maptool","tokentool","data","catch","response","message","_this$state","renderError","react_router_dom","basename","react_router","path","component","to","renderLoading","renderList","Component","render","GitHubReleases_GitHubReleases","document","getElementById"],"mappings":"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","file":"static/js/main.bb1f4587.chunk.js","sourcesContent":["const DownloadType  = {\n    ALL: \"all\",\n    MAC: \"mac\",\n    WINDOWS: \"windows\",\n    LINUX: \"linux\",\n    JAR: \"jar\"\n};\n\nexport default DownloadType;","import React from 'react';\nimport DownloadType from './DownloadType';\n\nconst ButtonImageMapping = {\n    'deb': 'images/download-button-linux.png',\n    'jar': 'images/download-button-jar.png',\n    'exe': 'images/download-button-windows.png',\n    'dmg': 'images/download-button-macos-dmg.png'\n};\n\nconst PlatformMapping = {\n    'deb': 'Linux',\n    'jar': 'Java Jar',\n    'exe': 'Windows',\n    'dmg': 'Mac Os'\n};\n\n\n\nconst Download = ({ download, index, downloadType }) => {\n    let show = false;\n\n    switch (downloadType) {\n        case DownloadType.JAR:\n            if (download.name.endsWith('.jar')) {\n                show = true;\n            }\n            break;\n        case DownloadType.LINUX:\n            if (download.name.endsWith('.deb')) {\n                show = true;\n            }\n            break;\n        case DownloadType.MAC:\n            if (download.name.endsWith('.pkg')) {\n                show = true;\n            } else if (download.name.endsWith('.dmg')) {\n                show = true;\n            }\n            break;\n        case DownloadType.WINDOWS:\n            if (download.name.endsWith('.exe')) {\n                show = true;\n            }\n            break;\n        default: /* ALL */\n            show = true;\n            break;\n    }\n\n    if (show) {\n        const downloadLink = download.browser_download_url;\n        const ext = downloadLink.substr(downloadLink.lastIndexOf('.') + 1);\n        const imagePath = ButtonImageMapping[ext];\n        const downloadPlatform = PlatformMapping[ext];\n\n        return (\n            <div className='download-details'>\n                <div className='download-url'>\n                    <a href={downloadLink}>\n                        <img id={'button-' + download.id} src={imagePath}/>\n                        <div>\n                            <label htmlFor={'button-' + download.id}>\n                                {downloadPlatform}\n                            </label>\n                        </div>\n                    </a>\n                    <div className='download-count'>{download.download_count} Downloads</div>\n                </div>\n            </div>\n        );\n    } else {\n        return '';\n    }\n};\n\nexport default Download;","import React from \"react\";\nimport Download from \"./Download\"\n\nconst Releases = ({ release, index, showPre, downloadType, tool }) => {\n    if (release.assets.length === 0) {\n        return \"\";\n    }\n\n    if (showPre || !release.prerelease) {\n\n        let releaseDate = new Date(release.published_at).toLocaleString(undefined, {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: '2-digit',\n            minute: '2-digit',\n            timeZoneName: 'short'\n        });\n\n        const tagName = release.tag_name;\n        const toolImage = tool == 'TokenTool' ? 'images/RPTools-Token-Logo.png' : 'images/RPTools-Map-Logo.png';\n\n        const releaseNoteLink = 'https://github.com/RPTools/' + tool + '/blob/' + tagName + '/CHANGE_LOG.md';\n        return (\n\n            <div>\n                <div className=\"release-img\"><img src={toolImage}/></div>\n                <div className=\"release-name\">{release.name !== \"\" ? release.name.replace(\"Release\", tool) : \"MapTool \" + release.tag_name}</div>\n                <div>\n                    <div className=\"published-date\">{releaseDate}</div>\n                    <a className=\"release-notes\" href={releaseNoteLink}>release notes</a>\n                </div>\n                <div>\n                    {\n                        release.assets.map((download, index) =>\n                            <Download download={download} index={index} key={download.id} downloadType={downloadType} tagName={tagName}/>\n                        )\n                    }\n                </div>\n            </div>\n        );\n    } else {\n        return \"\";\n    }\n};\n\n\nexport default Releases;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Releases from './Releases';\nimport DownloadType from './DownloadType';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\n\n\n\n\nexport default class GitHubReleases extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            mapToolReleases: [],\n            tokenToolToolReleases: [],\n            tool: '',\n            loading: true,\n            error: null,\n            showPre: false,\n            downloadType: DownloadType.ALL\n        };\n    }\n\n    componentWillMount() {\n        axios.all([\n                axios.get(`https://api.github.com/repos/rptools/maptool/releases`),\n                axios.get(`https://api.github.com/repos/rptools/tokentool/releases`)\n            ])\n            .then(axios.spread((maptool, tokentool) => {\n                const mapToolReleases = maptool.data;\n                const tokenToolReleases = tokentool.data;\n                this.setState({\n                    mapToolReleases,\n                    tokenToolReleases,\n                    loading: false\n                })\n            }))\n            .catch(error => {\n                this.setState({\n                    error: error,\n                    loading: false,\n                });\n            });\n    }\n\n    setTool = ({ match }) => {\n        console.log(match);\n        return '';\n    };\n\n    handleDownloadTypeChange = (event) => {\n        this.setState({ downloadType: event.target.value })\n    };\n\n    handlePreChange = (event) => {\n        const value = event.target.checked;\n        this.setState( { showPre: value })\n    };\n\n\n\n    releaseList = (route) => {\n        const tool = route.match.params.tool;\n        const releases = tool === 'TokenTool' ? this.state.tokenToolReleases : this.state.mapToolReleases;\n\n        return (\n            <div>\n                <h2>{tool} Releases</h2>\n                <div className=\"release-download-type\">\n                    <select value={this.state.downloadType} name='Download Type' onChange={this.handleDownloadTypeChange}>\n                        <option value={DownloadType.ALL}>{DownloadType.ALL}</option>\n                        <option value={DownloadType.JAR}>{DownloadType.JAR}</option>\n                        <option value={DownloadType.LINUX}>{DownloadType.LINUX}</option>\n                        <option value={DownloadType.MAC}>{DownloadType.MAC}</option>\n                        <option value={DownloadType.WINDOWS}>{DownloadType.WINDOWS}</option>\n                    </select>\n                </div>\n                <div className=\"release-download-prerelease\">\n                <label>Include Prerelease</label>\n                    <input name='Include Prerelease' type='checkbox' checked={this.state.showPre} onChange={this.handlePreChange}/>\n                </div>\n                <li className='release-list'>\n                    {releases.map((release, index) =>\n                        <Releases release={release} index={index} key={release.id} showPre={this.state.showPre}\n                                  downloadType={this.state.downloadType} tool={route.match.params.tool}\n                        />,\n                    )}\n                </li>\n            </div>\n        );\n    };\n\n    renderLoading() {\n        return (\n            <div>\n                Loading...\n            </div>\n        );\n    }\n\n    renderError() {\n        return (\n            <div>\n                <div>\n                    Sorry, an error occurred: {this.state.error.response.data.message}\n                </div>\n            </div>\n        );\n    }\n\n    renderList() {\n        const { error, mapToolReleases, tokenToolReleases } = this.state;\n\n        if (error) {\n            console.log(error);\n            return this.renderError();\n        }\n\n        return (\n            <Router basename=\"/\">\n                <div>\n                    <Route path='/:tool' component={this.releaseList} />\n                    <ul>\n                        <li><Link to='/MapTool'>MapTool</Link></li>\n                        <li><Link to='/TokenTool'>TokenTool</Link></li>\n                    </ul>\n                </div>\n            </Router>\n        );\n    }\n\n    render() {\n        return this.state.loading ? this.renderLoading() : this.renderList();\n    }\n}\n","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport GitHubReleases from './GitHubReleases';\nimport './styles.css';\n\nconst App = () =>\n    <div>\n        <GitHubReleases/>\n    </div>;\n\nrender(<App/>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}