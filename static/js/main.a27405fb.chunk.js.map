{"version":3,"sources":["GitHubReleases.js","index.js"],"names":["Release","_ref","release","index","react_default","a","createElement","className","name","tag_name","draft","published_at","prerelease","GitHubReleases","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","releases","loading","error","_this2","axios","get","window","encodeURI","then","response","console","log","data","setState","catch","message","_this$state","renderError","map","GitHubReleases_Release","key","id","renderLoading","renderList","React","Component","render","GitHubReleases_GitHubReleases","document","getElementById"],"mappings":"yNAIMA,EAAU,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAASC,EAAZF,EAAYE,MAAZ,OACZC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAKH,EAAQ,GACbC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAgBL,EAAQM,MACtCJ,EAAAC,EAAAC,cAAA,UAAKJ,EAAQO,UACbL,EAAAC,EAAAC,cAAA,UAAKJ,EAAQQ,MAAQ,QAAU,IAC/BN,EAAAC,EAAAC,cAAA,UAAKJ,EAAQS,cACbP,EAAAC,EAAAC,cAAA,UAAKJ,EAAQU,WAAa,cAAgB,MAG7BC,cACjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACTC,SAAU,GACVC,SAAS,EACTC,MAAO,MANIV,mFAUC,IAAAW,EAAAR,KAChBS,IACKC,IACGC,OAAOC,UAAP,0DAIHC,KAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZ,IAAMT,EAAWS,EAASG,KAC1BT,EAAKU,SAAS,CACVb,WACAC,SAAS,MAGhBa,MAAM,SAAAZ,GACHC,EAAKU,SAAS,CACVX,MAAOA,EACPD,SAAS,8CAMrB,OACIpB,EAAAC,EAAAC,cAAA,+DAOJ,OACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,wCAC+BY,KAAKI,MAAMG,MAAMO,SAASG,KAAKG,+CAM7D,IAAAC,EACmBrB,KAAKI,MAAzBG,EADCc,EACDd,MAAOF,EADNgB,EACMhB,SAEf,OAAIE,GACAQ,QAAQC,IAAIT,GACLP,KAAKsB,eAIZpC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,0BAGJF,EAAAC,EAAAC,cAAA,aACCiB,EAASkB,IAAI,SAACvC,EAASC,GAAV,OACVC,EAAAC,EAAAC,cAACoC,EAAD,CAASxC,QAASA,EAASC,MAAOA,EAAOwC,IAAKzC,EAAQ0C,0CAQlE,OAAO1B,KAAKI,MAAME,QAAUN,KAAK2B,gBAAkB3B,KAAK4B,oBA/EpBC,IAAMC,WCJlDC,iBAAO7C,EAAAC,EAAAC,cANK,kBACRF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAC4C,EAAD,QAGD,MAAQC,SAASC,eAAe","file":"static/js/main.a27405fb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nconst Release = ({ release, index }) =>\n    <tr>\n        <td>{index + 1}</td>\n        <td className=\"release-name\">{release.name}</td>\n        <td>{release.tag_name}</td>\n        <td>{release.draft ? \"draft\" : \"\"}</td>\n        <td>{release.published_at}</td>\n        <td>{release.prerelease ? \"pre-release\" : \"\"}</td>\n    </tr>;\n\nexport default class GitHubReleases extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            releases: [],\n            loading: true,\n            error: null,\n        };\n    }\n\n    componentDidMount() {\n        axios\n            .get(\n                window.encodeURI(\n                        `https://api.github.com/repos/rptools/maptool/releases`\n                ),\n            )\n            .then(response => {\n                console.log(response);\n                const releases = response.data;\n                this.setState({\n                    releases,\n                    loading: false,\n                });\n            })\n            .catch(error => {\n                this.setState({\n                    error: error,\n                    loading: false,\n                });\n            });\n    }\n\n    renderLoading() {\n        return (\n            <div>\n                Loading...\n            </div>\n        );\n    }\n\n    renderError() {\n        return (\n            <div>\n                <div>\n                    Sorry, an error occurred: {this.state.error.response.data.message}\n                </div>\n            </div>\n        );\n    }\n\n    renderList() {\n        const { error, releases } = this.state;\n\n        if (error) {\n            console.log(error);\n            return this.renderError();\n        }\n\n        return (\n            <table className=\"table table-striped\">\n                <thead>\n                <tr>\n                    <th>Index</th>\n                    <th>Name</th>\n                    <th>Prerelease</th>\n                </tr>\n                </thead>\n                <tbody>\n                {releases.map((release, index) =>\n                    <Release release={release} index={index} key={release.id} />,\n                )}\n                </tbody>\n            </table>\n        );\n    }\n\n    render() {\n        return this.state.loading ? this.renderLoading() : this.renderList();\n    }\n}\n","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport GitHubReleases from './GitHubReleases';\n\nconst App = () =>\n    <div>\n        <h1>Test React App</h1>\n        <GitHubReleases/>\n    </div>;\n\nrender(<App/>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}