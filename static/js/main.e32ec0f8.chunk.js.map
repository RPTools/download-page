{"version":3,"sources":["DownloadType.js","Download.js","Releases.js","GitHubReleases.js","index.js"],"names":["DownloadType","ALL","MAC","WINDOWS","LINUX","JAR","ButtonImageMapping","PlatformMapping","Download","download","show","index","downloadType","name","endsWith","downloadLink","browser_download_url","ext","substr","lastIndexOf","imagePath","downloadPlatform","className","href","id","src","htmlFor","download_count","Releases","release","showPre","tool","assets","length","prerelease","releaseDate","Date","published_at","toLocaleString","undefined","day","month","year","hour","minute","timeZoneName","tagName","tag_name","toolImage","releaseNoteLink","replace","map","key","GitHubReleases","props","setTool","match","console","log","handleDownloadTypeChange","event","setState","target","value","handlePreChange","checked","releaseList","route","params","releases","state","tokenToolReleases","mapToolReleases","onChange","type","tokenToolToolReleases","loading","error","axios","all","get","then","spread","maptool","tokentool","data","catch","this","response","message","renderError","basename","path","component","to","renderLoading","renderList","Component","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.e32ec0f8.chunk.js","sourcesContent":["const DownloadType  = {\n    ALL: \"all\",\n    MAC: \"mac\",\n    WINDOWS: \"windows\",\n    LINUX: \"linux\",\n    JAR: \"jar\"\n};\n\nexport default DownloadType;","import React from 'react';\nimport DownloadType from './DownloadType';\n\nconst ButtonImageMapping = {\n    'deb': 'images/download-button-linux.png',\n    'jar': 'images/download-button-jar.png',\n    'exe': 'images/download-button-windows.png',\n    'dmg': 'images/download-button-macos-dmg.png'\n};\n\nconst PlatformMapping = {\n    'deb': 'Linux',\n    'jar': 'Java Jar',\n    'exe': 'Windows',\n    'dmg': 'Mac Os'\n};\n\n\n\nconst Download = ({ download, index, downloadType }) => {\n    let show = false;\n\n    switch (downloadType) {\n        case DownloadType.JAR:\n            if (download.name.endsWith('.jar')) {\n                show = true;\n            }\n            break;\n        case DownloadType.LINUX:\n            if (download.name.endsWith('.deb')) {\n                show = true;\n            }\n            break;\n        case DownloadType.MAC:\n            if (download.name.endsWith('.pkg')) {\n                show = true;\n            } else if (download.name.endsWith('.dmg')) {\n                show = true;\n            }\n            break;\n        case DownloadType.WINDOWS:\n            if (download.name.endsWith('.exe')) {\n                show = true;\n            }\n            break;\n        default: /* ALL */\n            show = true;\n            break;\n    }\n\n    if (show) {\n        const downloadLink = download.browser_download_url;\n        const ext = downloadLink.substr(downloadLink.lastIndexOf('.') + 1);\n        const imagePath = ButtonImageMapping[ext];\n        const downloadPlatform = PlatformMapping[ext];\n\n        return (\n            <div className='download-details'>\n                <div className='download-url'>\n                    <a href={downloadLink}>\n                        <img id={'button-' + download.id} src={imagePath}/>\n                        <div>\n                            <label htmlFor={'button-' + download.id}>\n                                {downloadPlatform}\n                            </label>\n                        </div>\n                    </a>\n                    <div className='download-count'>{download.download_count} Downloads</div>\n                </div>\n            </div>\n        );\n    } else {\n        return '';\n    }\n};\n\nexport default Download;","import React from \"react\";\nimport Download from \"./Download\"\n\nconst Releases = ({ release, index, showPre, downloadType, tool }) => {\n    if (release.assets.length === 0) {\n        return \"\";\n    }\n\n    if (showPre || !release.prerelease) {\n\n        let releaseDate = new Date(release.published_at).toLocaleString(undefined, {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: '2-digit',\n            minute: '2-digit',\n            timeZoneName: 'short'\n        });\n\n        const tagName = release.tag_name;\n        const toolImage = tool == 'TokenTool' ? 'images/RPTools-Token-Logo.png' : 'images/RPTools-Map-Logo.png';\n\n        const releaseNoteLink = 'https://github.com/RPTools/' + tool + '/blob/' + tagName + '/CHANGE_LOG.md';\n        return (\n\n            <div>\n                <div className=\"release-img\"><img src={toolImage}/></div>\n                <div className=\"release-name\">{release.name !== \"\" ? release.name.replace(\"Release\", tool) : \"MapTool \" + release.tag_name}</div>\n                <div>\n                    <div className=\"published-date\">{releaseDate}</div>\n                    <a className=\"release-notes\" href={releaseNoteLink}>release notes</a>\n                </div>\n                <div>\n                    {\n                        release.assets.map((download, index) =>\n                            <Download download={download} index={index} key={download.id} downloadType={downloadType} tagName={tagName}/>\n                        )\n                    }\n                </div>\n            </div>\n        );\n    } else {\n        return \"\";\n    }\n};\n\n\nexport default Releases;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Releases from './Releases';\nimport DownloadType from './DownloadType';\n\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\n\n\n\n\nexport default class GitHubReleases extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            mapToolReleases: [],\n            tokenToolToolReleases: [],\n            tool: '',\n            loading: true,\n            error: null,\n            showPre: false,\n            downloadType: DownloadType.ALL\n        };\n    }\n\n    componentWillMount() {\n        axios.all([\n                axios.get(`https://api.github.com/repos/rptools/maptool/releases`),\n                axios.get(`https://api.github.com/repos/rptools/tokentool/releases`)\n            ])\n            .then(axios.spread((maptool, tokentool) => {\n                const mapToolReleases = maptool.data;\n                const tokenToolReleases = tokentool.data;\n                this.setState({\n                    mapToolReleases,\n                    tokenToolReleases,\n                    loading: false\n                })\n            }))\n            .catch(error => {\n                this.setState({\n                    error: error,\n                    loading: false,\n                });\n            });\n    }\n\n    setTool = ({ match }) => {\n        console.log(match);\n        return '';\n    };\n\n    handleDownloadTypeChange = (event) => {\n        this.setState({ downloadType: event.target.value })\n    };\n\n    handlePreChange = (event) => {\n        const value = event.target.checked;\n        this.setState( { showPre: value })\n    };\n\n\n\n    releaseList = (route) => {\n        const tool = route.match.params.tool;\n        const releases = tool === 'TokenTool' ? this.state.tokenToolReleases : this.state.mapToolReleases;\n\n        return (\n            <div>\n                <h2 className=\"tool-release-title\">{tool} Releases</h2>\n                <div className=\"release-download-type\">\n                    <select value={this.state.downloadType} name='Download Type' onChange={this.handleDownloadTypeChange}>\n                        <option value={DownloadType.ALL}>{DownloadType.ALL}</option>\n                        <option value={DownloadType.JAR}>{DownloadType.JAR}</option>\n                        <option value={DownloadType.LINUX}>{DownloadType.LINUX}</option>\n                        <option value={DownloadType.MAC}>{DownloadType.MAC}</option>\n                        <option value={DownloadType.WINDOWS}>{DownloadType.WINDOWS}</option>\n                    </select>\n                </div>\n                <div className=\"release-download-prerelease\">\n                <label>Include Prerelease</label>\n                    <input name='Include Prerelease' type='checkbox' checked={this.state.showPre} onChange={this.handlePreChange}/>\n                </div>\n                <li className='release-list'>\n                    {releases.map((release, index) =>\n                        <Releases release={release} index={index} key={release.id} showPre={this.state.showPre}\n                                  downloadType={this.state.downloadType} tool={route.match.params.tool}\n                        />,\n                    )}\n                </li>\n            </div>\n        );\n    };\n\n    renderLoading() {\n        return (\n            <div>\n                Loading...\n            </div>\n        );\n    }\n\n    renderError() {\n        return (\n            <div>\n                <div>\n                    Sorry, an error occurred: {this.state.error.response.data.message}\n                </div>\n            </div>\n        );\n    }\n\n    renderList() {\n        const { error, mapToolReleases, tokenToolReleases } = this.state;\n\n        if (error) {\n            console.log(error);\n            return this.renderError();\n        }\n\n        return (\n            <Router basename=\"/\">\n                <div>\n                    <Route path='/:tool' component={this.releaseList} />\n                    <ul>\n                        <li><Link to='/MapTool'>MapTool</Link></li>\n                        <li><Link to='/TokenTool'>TokenTool</Link></li>\n                    </ul>\n                </div>\n            </Router>\n        );\n    }\n\n    render() {\n        return this.state.loading ? this.renderLoading() : this.renderList();\n    }\n}\n","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport GitHubReleases from './GitHubReleases';\n\nconst App = () =>\n    <div>\n        <GitHubReleases/>\n    </div>;\n\nrender(<App/>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}